name: Iso building

on:
  push:
    paths:
    - 'conf/**'
    - 'specs/**'
    - 'scripts/**'
    - '.github/workflows/**'
    branches: [ master, develop ]
  pull_request:
    paths:
    - 'conf/**'
    - 'specs/**'
    - 'scripts/**'
    - '.github/workflows/**'
    branches: [ master, develop ]
  schedule:
    - cron:  '0 1 * * *'

jobs:
  iso:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
       include:
         - spec: "micro"
           name: "Mocaccino Micro"
         - spec: "gnome"
           name: "Mocaccino GNOME Desktop"
         - spec: "micro-dev"
           name: "Mocaccino Micro Development version"
         - spec: "gnome-dev"
           name: "Mocaccino GNOME Desktop Development version"
         - spec: "minimal-dev"
           name: "Mocaccino Desktop Minimal Development version"
    env:
      MINIO_API_URL: ${{ secrets.MINIO_API_URL }}
      MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
      MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
    steps:
    - uses: actions/checkout@v2
    - name: Install Luet and deps ðŸ”§
      run: |
        sudo apt-get install -y xorriso squashfs-tools dosfstools
        curl https://get.mocaccino.org/luet/get_luet_root.sh | sudo sh
        sudo luet install -y repository/mocaccino-extra
        sudo luet install -y utils/jq utils/yq net-fs/minio-client system/luet-devkit
    - name: ${{matrix.name}} ISO Build ðŸ”§
      env:
        LUET_NOLOCK: "true"
        SPEC: ${{matrix.spec}}
      run: |
            sudo -E luet geniso-isospec specs/$SPEC.yaml
            mkdir isobuild
            mv *.iso *.sha256 isobuild/
    - name: Install minio and login
      env:
        MINIO_API_URL: ${{ secrets.MINIO_API_URL }}
        MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
        MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
      run: |
        mc alias set minio $MINIO_API_URL $MINIO_ACCESS_KEY $MINIO_SECRET_KEY
    - name: Deploy ðŸš€
      if: github.ref == 'refs/heads/master'
      run: |
        mc cp --recursive $PWD/isobuild/ minio/mocaccino-iso
    - uses: actions/upload-artifact@v2
      with:
        name: mOS-${{ matrix.spec }}.iso.zip
        path: |
          *.iso
          *.sha256
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: build-log-${{matrix.spec}}
        path: isowork/*.log

  qemu:
      runs-on: ubuntu-latest
      needs: iso

      strategy:
        matrix:
            - spec: "micro-dev"
              flavor: "Micro-Dev"
      steps:
      - uses: actions/checkout@v2
      - name: Download ISO
        uses: actions/download-artifact@v2
        with:
          name: mOS-${{ matrix.spec }}.iso.zip

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu qemu-system qemu-kvm
          sudo -E make deps
          sudo luet install -y utils/packer
      - name: Build QEMU Image ðŸ”§
        run: |
          build=$(date +%Y%m%d)
          PACKER_ARGS="-var='accellerator=none' -var='sleep=5m' -var=build=$build -var='flavor=${{ matrix.flavor }}' -only qemu" make packer
      - name: Install minio and login
        env:
          MINIO_API_URL: ${{ secrets.MINIO_API_URL }}
          MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
        run: |
          mc alias set minio $MINIO_API_URL $MINIO_ACCESS_KEY $MINIO_SECRET_KEY
      - name: Deploy ðŸš€
        if: github.ref == 'refs/heads/master'
        run: |
          mc cp --recursive $PWD/packer/*.tar.gz minio/mocaccino-iso
      - uses: actions/upload-artifact@v2
        with:
          name: mOS-${{ matrix.spec }}.qcow
          path: |
            packer/*.tar.gz

  vbox:
      runs-on: macos-10.15
      needs: iso
      strategy:
        matrix:
            - spec: "micro-dev"
              flavor: "Micro-Dev"
      steps:
      - uses: actions/checkout@v2
      - name: Download ISO
        uses: actions/download-artifact@v2
        with:
          name: mOS-${{ matrix.spec }}.iso.zip

      - name: Install deps
        run: |
          brew tap hashicorp/tap
          brew install hashicorp/tap/packer
          brew install minio-mc
      - name: Build VBox Image ðŸ”§
        run: |
          build=$(date +%Y%m%d)
          PACKER_ARGS="-var='sleep=5m' -only virtualbox-iso -var=build=$build -var='flavor=${{ matrix.flavor }}'" make packer
          ls packer
      - name: Install minio and login
        env:
          MINIO_API_URL: ${{ secrets.MINIO_API_URL }}
          MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
        run: |
          mc alias set minio $MINIO_API_URL $MINIO_ACCESS_KEY $MINIO_SECRET_KEY
      - name: Deploy ðŸš€
        if: github.ref == 'refs/heads/master'
        run: |
          mc cp --recursive $PWD/packer/*.tar.gz minio/mocaccino-iso
      - uses: actions/upload-artifact@v2
        with:
          name: mOS-${{ matrix.flavor }}.ova
          path: |
            packer/*.tar.gz

  vbox-vagrant:
      runs-on: macos-10.15
      needs: iso
       strategy:
        matrix:
          include:
            - spec: "micro-dev"
              flavor: "Micro-Dev"
      steps:
      - uses: actions/checkout@v2
      - name: Download ISO
        uses: actions/download-artifact@v2
        with:
          name: mOS-${{ matrix.spec }}.iso.zip

      - name: Install deps
        run: |
          brew tap hashicorp/tap
          brew install hashicorp/tap/packer
          brew install minio-mc
      - name: Build VBox Image ðŸ”§
        run: |
          build=$(date +%Y%m%d)
          PACKER_ARGS="-var='sleep=5m' -var='vagrant=true' -var=build=$build -var='flavor=${{ matrix.flavor }}' -only virtualbox-iso" make packer
          ls packer
      - name: Install minio and login
        env:
          MINIO_API_URL: ${{ secrets.MINIO_API_URL }}
          MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
        run: |
          mc alias set minio $MINIO_API_URL $MINIO_ACCESS_KEY $MINIO_SECRET_KEY
      - name: Deploy ðŸš€
        if: github.ref == 'refs/heads/master'
        run: |
          mc cp --recursive $PWD/packer/*.box minio/mocaccino-iso
      - uses: actions/upload-artifact@v2
        with:
          name: mOS-${{ matrix.flavor }}.box
          path: |
            packer/*.box

  tests:
      runs-on: macos-10.15
      needs: vbox-vagrant
      strategy:
        matrix:
          include:
            - spec: "micro-dev"
              flavor: "Micro-Dev"
      steps:
      - name: Install Go
        uses: actions/setup-go@v2
      - uses: actions/checkout@v2
      - name: Download vagrant box
        uses: actions/download-artifact@v2
        with:
          name: mOS-${{ matrix.flavor }}.box
          path: packer

      - name: Run tests ðŸ”§
        run: |
          go get -u github.com/onsi/ginkgo/ginkgo
          go get -u github.com/onsi/gomega/...
          make test